{"version":3,"sources":["webpack:///./src/views/users/item/item-detail.vue?d7a0","webpack:///src/views/users/item/item-detail.vue","webpack:///./src/views/users/item/item-detail.vue?6d2a","webpack:///../../../src/components/VCombobox/VCombobox.ts","webpack:///./src/views/users/item/item-detail.vue","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","_l","item","i","key","src","items","model","value","callback","$$v","size","expression","quantity","tab","_s","text","staticRenderFns","data","itemPics","name","props","delimiters","type","default","returnObject","editingIndex","computed","computedCounterValue","multiple","selectedItems","internalSearch","hasSlot","VSelect","isAnyValueAllowed","menuCanShow","hasDisplayedItems","$slots","searchIsDirty","methods","onInternalSearchChanged","val","delimiter","find","d","genInput","input","genChipSelection","chip","dblclick","onChipInput","onEnterDown","e","getMenuIndex","onFilteredItemsChanged","onKeyDown","keyCode","$refs","selectionStart","onTabDown","selectItem","getText","toLocaleLowerCase","includes","setSelectedItems","internalValue","setValue","updateEditing","index","findIndex","Object","updateCombobox","isUsingSlot","Boolean","$scopedSlots","updateSelf","updateTags","menuIndex","itemToSelect","onPaste","pastedItemText","event","findExistingIndex","clearableCallback","component","VBtn","VCard","VCardText","VCarousel","VCarouselItem","VCol","VCombobox","VContainer","VRow","VTab","VTabItem","VTabs","VTabsItems","VTextField","defaultMenuProps","offsetY","offsetOverflow","transition","allowOverflow","autoSelectFirst","filter","itemText","queryText","hideNoData","menuProps","noFilter","searchInput","String","lazySearch","classes","selectedIndex","computedItems","selectedValues","map","hideSelected","filteredItems","some","length","currentRange","selectedItem","allItems","get","set","isDirty","isSearching","$_menuProps","listData","watch","isFocused","document","isMenuActive","oldVal","activateMenu","created","destroyed","updateMenuDimensions","menu","changeSelectedIndex","deleteCurrentItem","curIndex","curItem","getDisabled","lastIndex","nextIndex","nextItem","autocomplete","domProps","genInputSlot","slot","genSelections","onClick","isAppendInner","onInput","target","onSpaceDown","onUpDown","setSearch","valueComparator","getValue","hasItem","indexOf","onCopy","currentItem","currentItemText"],"mappings":"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","file":"js/chunk-ed5d5ee2.17935918.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{staticClass:\"pa-6 ma-2\"},[_c('div',[_c('v-row',{attrs:{\"cols\":\"6\",\"md\":\"6\",\"sm\":\"6\"}},[_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\",\"sm\":\"12\"}},[_c('h1',[_vm._v(\"상품 상세 페이지\")]),_c('v-carousel',{attrs:{\"delimiter-icon\":\"mdi-minus\",\"hide-delimiter-background\":\"\",\"show-arrows\":false}},_vm._l((_vm.itemPics),function(item,i){return _c('v-carousel-item',{key:i,attrs:{\"src\":item.src}})}),1)],1),_c('v-col',{attrs:{\"cols\":\"6\",\"md\":\"6\",\"sm\":\"6\"}},[_c('h2',[_vm._v(\"상품 소개\")]),_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\",\"sm\":\"6\"}},[_c('v-row',{attrs:{\"cols\":\"12\",\"md\":\"12\",\"sm\":\"12\"}},[_c('v-col',{attrs:{\"cols\":\"6\",\"md\":\"6\",\"sm\":\"6\"}},[_c('v-span',{staticClass:\"px\"},[_vm._v(\"사이즈\")])],1),_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\",\"sm\":\"6\"}},[_c('v-combobox',{attrs:{\"items\":_vm.items,\"outlined\":\"\",\"dense\":\"\",\"hide-details\":\"\"},model:{value:(_vm.size),callback:function ($$v) {_vm.size=$$v},expression:\"size\"}})],1)],1),_c('v-row',{attrs:{\"cols\":\"12\",\"md\":\"12\",\"sm\":\"12\"}},[_c('v-col',{attrs:{\"cols\":\"6\",\"md\":\"6\",\"sm\":\"6\"}},[_c('v-span',{staticClass:\"pt-8\"},[_vm._v(\"색상\")])],1),_c('v-col',{attrs:{\"cols\":\"6\",\"md\":\"6\",\"sm\":\"6\"}},[_c('v-span',{staticClass:\"pt-8\"},[_vm._v(\"파랑\")])],1)],1),_c('v-row',{attrs:{\"cols\":\"12\",\"md\":\"12\",\"sm\":\"12\"}},[_c('v-col',{attrs:{\"cols\":\"6\",\"md\":\"6\",\"sm\":\"6\"}},[_c('v-span',{staticClass:\"pt-8\"},[_vm._v(\"가격\")])],1),_c('v-col',{attrs:{\"cols\":\"6\",\"md\":\"6\",\"sm\":\"6\"}},[_c('v-span',{staticClass:\"pt-8\"},[_vm._v(\"3000원\")])],1)],1),_c('v-row',{attrs:{\"cols\":\"12\",\"md\":\"12\",\"sm\":\"12\"}},[_c('v-col',{attrs:{\"cols\":\"6\",\"md\":\"6\",\"sm\":\"6\"}},[_c('v-span',{staticClass:\"pt-8\"},[_vm._v(\"수량\")])],1),_c('v-col',{attrs:{\"cols\":\"6\",\"md\":\"6\",\"sm\":\"6\"}},[_c('v-text-field',{attrs:{\"hide-details\":\"\",\"type\":\"number\",\"max-width\":\"4\"},model:{value:(_vm.quantity),callback:function ($$v) {_vm.quantity=$$v},expression:\"quantity\"}})],1)],1),_c('v-btn',{staticClass:\"ma-2 mt-lg-12\",attrs:{\"outlined\":\"\",\"to\":\"/cart\",\"color\":\"indigo\"}},[_vm._v(\" 장바구니에 담기 \")]),_c('v-btn',{staticClass:\"ma-2\",attrs:{\"outlined\":\"\",\"to\":\"/itemOrder\",\"color\":\"indigo\"}},[_vm._v(\" 주문하기 \")])],1)],1)],1),_c('v-row',[_c('v-col',{attrs:{\"col\":\"12\",\"md\":\"12\",\"sm\":\"12\"}},[_c('hr')]),_c('v-col',[_c('v-tabs',{attrs:{\"background-color\":\"transparent\",\"grow\":\"\"},model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((_vm.tabItems),function(item){return _c('v-tab',{key:item},[_vm._v(\" \"+_vm._s(item)+\" \")])}),1),_c('v-tabs-items',{model:{value:(_vm.tab),callback:function ($$v) {_vm.tab=$$v},expression:\"tab\"}},_vm._l((_vm.tabItems),function(item){return _c('v-tab-item',{key:item},[_c('v-card',{attrs:{\"flat\":\"\"}},[_c('v-card-text',[_vm._v(_vm._s(_vm.text))])],1)],1)}),1)],1)],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-container class=\"pa-6 ma-2\">\r\n    <div>\r\n      <v-row cols=\"6\" md=\"6\" sm=\"6\">\r\n        <v-col cols=\"12\" md=\"6\" sm=\"12\">\r\n          <h1>상품 상세 페이지</h1>\r\n          <v-carousel delimiter-icon=\"mdi-minus\" hide-delimiter-background :show-arrows=\"false\">\r\n            <v-carousel-item v-for=\"(item,i) in itemPics\" :key=\"i\" :src=\"item.src\"></v-carousel-item>\r\n          </v-carousel>\r\n\r\n        </v-col>\r\n        <v-col cols=\"6\" md=\"6\" sm=\"6\">\r\n          <h2>상품 소개</h2>\r\n          <v-col cols=\"12\" md=\"6\" sm=\"6\">\r\n            <v-row cols=\"12\" md=\"12\" sm=\"12\">\r\n              <v-col cols=\"6\" md=\"6\" sm=\"6\">\r\n                <v-span class=\"px\">사이즈</v-span>\r\n              </v-col>\r\n              <v-col cols=\"12\" md=\"6\" sm=\"6\">\r\n                <v-combobox v-model=\"size\" :items=\"items\" outlined dense hide-details></v-combobox>\r\n              </v-col>\r\n            </v-row>\r\n            <v-row cols=\"12\" md=\"12\" sm=\"12\">\r\n              <v-col cols=\"6\" md=\"6\" sm=\"6\">\r\n                <v-span class=\"pt-8\">색상</v-span>\r\n              </v-col>\r\n              <v-col cols=\"6\" md=\"6\" sm=\"6\">\r\n                <v-span class=\"pt-8\">파랑</v-span>\r\n              </v-col>\r\n            </v-row>\r\n            <v-row cols=\"12\" md=\"12\" sm=\"12\">\r\n               <v-col cols=\"6\" md=\"6\" sm=\"6\">\r\n                <v-span class=\"pt-8\">가격</v-span>\r\n              </v-col>\r\n               <v-col cols=\"6\" md=\"6\" sm=\"6\">\r\n                <v-span class=\"pt-8\">3000원</v-span>\r\n              </v-col>\r\n            </v-row>\r\n            <v-row cols=\"12\" md=\"12\" sm=\"12\">\r\n              <v-col cols=\"6\" md=\"6\" sm=\"6\">\r\n                <v-span class=\"pt-8\">수량</v-span>\r\n              </v-col>\r\n              <v-col cols=\"6\" md=\"6\" sm=\"6\">\r\n                <v-text-field v-model=\"quantity\" hide-details type=\"number\" max-width=\"4\" />\r\n              </v-col>\r\n            </v-row>\r\n            <v-btn class=\"ma-2 mt-lg-12\" outlined to=\"/cart\" color=\"indigo\">\r\n              장바구니에 담기\r\n            </v-btn>\r\n            <v-btn class=\"ma-2\" outlined to=\"/itemOrder\" color=\"indigo\">\r\n              주문하기\r\n            </v-btn>\r\n          </v-col>\r\n        </v-col>\r\n      </v-row>\r\n      <v-row>\r\n        <v-col col=\"12\" md=\"12\" sm=\"12\">\r\n          <hr>\r\n        </v-col>\r\n        <v-col>\r\n          <v-tabs v-model=\"tab\" background-color=\"transparent\" grow>\r\n            <v-tab v-for=\"item in tabItems\" :key=\"item\">\r\n              {{ item }}\r\n            </v-tab>\r\n          </v-tabs>\r\n\r\n          <v-tabs-items v-model=\"tab\">\r\n            <v-tab-item v-for=\"item in tabItems\" :key=\"item\">\r\n              <v-card flat>\r\n                <v-card-text>{{ text }}</v-card-text>\r\n              </v-card>\r\n            </v-tab-item>\r\n          </v-tabs-items>\r\n        </v-col>\r\n      </v-row>\r\n    </div>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      itemPics: [\r\n          {\r\n            src: 'https://cdn.vuetifyjs.com/images/carousel/squirrel.jpg',\r\n          },\r\n          {\r\n            src: 'https://cdn.vuetifyjs.com/images/carousel/sky.jpg',\r\n          },\r\n          {\r\n            src: 'https://cdn.vuetifyjs.com/images/carousel/bird.jpg',\r\n          },\r\n          {\r\n            src: 'https://cdn.vuetifyjs.com/images/carousel/planet.jpg',\r\n          },\r\n        ],\r\n      quantity : \"1\",\r\n       items: [\r\n          '90',\r\n          '95',\r\n          '100',\r\n          '105',\r\n        ],\r\n        tab: null,\r\n        tabItems: [\r\n          '상품 리뷰', '상품 문의', '판매자 소개', '배송/환불/AS/교환',\r\n        ],\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\r\n        \r\n    }\r\n  } ,\r\n//  methods: {\r\n//    ...mapActions([\"fetchOneItem\"]),\r\n//  }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./item-detail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./item-detail.vue?vue&type=script&lang=js&\"","// Styles\nimport '../VAutocomplete/VAutocomplete.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    returnObject: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    editingIndex: -1,\n  }),\n\n  computed: {\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot (): boolean {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed (): boolean {\n      return true\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null\n    },\n  },\n\n  methods: {\n    onInternalSearchChanged (val: any) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genInput () {\n      const input = VAutocomplete.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n      input.data!.on!.paste = this.onPaste\n\n      return input\n    },\n    genChipSelection (item: object, index: number) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions!.listeners! = {\n          ...chip.componentOptions!.listeners!,\n          dblclick: () => {\n            this.editingIndex = index\n            this.internalSearch = this.getText(item)\n            this.selectedIndex = -1\n          },\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item: object) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e: Event) {\n      e.preventDefault()\n      // If has menu index, let v-select-list handle\n      if (this.getMenuIndex() > -1) return\n\n      this.$nextTick(this.updateSelf)\n    },\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      if (!this.autoSelectFirst) return\n\n      VAutocomplete.options.methods.onFilteredItemsChanged.call(this, val, oldVal)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e: KeyboardEvent) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item: object) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item)\n\n        // if selected item contains search value,\n        // remove the search string\n        if (\n          this.internalSearch &&\n          this.multiple &&\n          this.getText(item).toLocaleLowerCase().includes(this.internalSearch.toLocaleLowerCase())\n        ) {\n          this.internalSearch = null\n        }\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value?: any) {\n      VSelect.options.methods.setValue.call(this, value ?? this.internalSearch)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      const index = this.selectedItems.findIndex(item =>\n        this.getText(item) === this.internalSearch)\n\n      // If user enters a duplicate text on chip edit,\n      // don't add it, move it to the end of the list\n      if (index > -1) {\n        const item = typeof value[index] === 'object'\n          ? Object.assign({}, value[index])\n          : value[index]\n\n        value.splice(index, 1)\n        value.push(item)\n      } else {\n        value[this.editingIndex] = this.internalSearch\n      }\n\n      this.setValue(value)\n      this.editingIndex = -1\n      this.internalSearch = null\n    },\n    updateCombobox () {\n      // If search is not dirty, do nothing\n      if (!this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot to avoid a double input\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n      if (isUsingSlot) this.internalSearch = null\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // or if the search is empty\n      // do nothing\n      if ((menuIndex < 0 && !this.searchIsDirty) ||\n          !this.internalSearch) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.findIndex(item =>\n        this.internalSearch === this.getText(item))\n\n      // If the duplicate item is an object,\n      // copy it, so that it can be added again later\n      const itemToSelect = index > -1 && typeof this.selectedItems[index] === 'object'\n        ? Object.assign({}, this.selectedItems[index])\n        : this.internalSearch\n\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(itemToSelect)\n\n      this.internalSearch = null\n    },\n    onPaste (event: ClipboardEvent) {\n      if (!this.multiple || this.searchIsDirty) return\n\n      const pastedItemText = event.clipboardData?.getData('text/vnd.vuetify.autocomplete.item+plain')\n      if (pastedItemText && this.findExistingIndex(pastedItemText as any) === -1) {\n        event.preventDefault()\n        VSelect.options.methods.selectItem.call(this, pastedItemText as any)\n      }\n    },\n    clearableCallback () {\n      this.editingIndex = -1\n\n      VAutocomplete.options.methods.clearableCallback.call(this)\n    },\n  },\n})\n","import { render, staticRenderFns } from \"./item-detail.vue?vue&type=template&id=f506f140&\"\nimport script from \"./item-detail.vue?vue&type=script&lang=js&\"\nexport * from \"./item-detail.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCarousel } from 'vuetify/lib/components/VCarousel';\nimport { VCarouselItem } from 'vuetify/lib/components/VCarousel';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VCombobox } from 'vuetify/lib/components/VCombobox';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VTab } from 'vuetify/lib/components/VTabs';\nimport { VTabItem } from 'vuetify/lib/components/VTabs';\nimport { VTabs } from 'vuetify/lib/components/VTabs';\nimport { VTabsItems } from 'vuetify/lib/components/VTabs';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VBtn,VCard,VCardText,VCarousel,VCarouselItem,VCol,VCombobox,VContainer,VRow,VTab,VTabItem,VTabs,VTabsItems,VTextField})\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (\n        !this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (\n        !this.multiple &&\n        !this.valueComparator(\n          this.internalSearch,\n          this.getValue(this.internalValue)\n        )\n      ) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n"],"sourceRoot":""}